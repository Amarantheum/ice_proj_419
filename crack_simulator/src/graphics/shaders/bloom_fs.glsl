#version 140
    
out vec4 color;
in vec2 uv;

uniform sampler2D crack_texture;
uniform float scale;

const float kernel[9 * 9] = float[9 * 9](
0.0000,	0.0000,	0.0000,	0.0001,	0.0001,	0.0001,	0.0000,	0.0000,	0.0000,
0.0000,	0.0000,	0.0004,	0.0014,	0.0023,	0.0014,	0.0004,	0.0000,	0.0000,
0.0000,	0.0004,	0.0037,	0.0146,	0.0232,	0.0146,	0.0037,	0.0004,	0.0000,
0.0001,	0.0014,	0.0146,	0.0584,	0.0926,	0.0584,	0.0146,	0.0014,	0.0001,
0.0001,	0.0023,	0.0232,	0.0926,	0.1466,	0.0926,	0.0232,	0.0023,	0.0001,
0.0001,	0.0014,	0.0146,	0.0584,	0.0926,	0.0584,	0.0146,	0.0014,	0.0001,
0.0000,	0.0004,	0.0037,	0.0146,	0.0232,	0.0146,	0.0037,	0.0004,	0.0000,
0.0000,	0.0000,	0.0004,	0.0014,	0.0023,	0.0014,	0.0004,	0.0000,	0.0000,
0.0000,	0.0000,	0.0000,	0.0001,	0.0001,	0.0001,	0.0000,	0.0000,	0.0000);

const int kernel_size = 9;
// const float kernel[27 * 27] = float[27 * 27](
//     0.0000,	0.0000,	0.0000,	0.0000,	0.0000,	0.0001,	0.0001,	0.0001,	0.0001,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0001,	0.0001,	0.0001,	0.0001,	0.0000,	0.0000,	0.0000,	0.0000,	0.0000,
//     0.0000,	0.0000,	0.0000,	0.0000,	0.0001,	0.0001,	0.0001,	0.0002,	0.0002,	0.0003,	0.0003,	0.0003,	0.0004,	0.0004,	0.0004,	0.0003,	0.0003,	0.0003,	0.0002,	0.0002,	0.0001,	0.0001,	0.0001,	0.0000,	0.0000,	0.0000,	0.0000,
//     0.0000,	0.0000,	0.0001,	0.0001,	0.0001,	0.0002,	0.0002,	0.0003,	0.0004,	0.0004,	0.0005,	0.0005,	0.0006,	0.0006,	0.0006,	0.0005,	0.0005,	0.0004,	0.0004,	0.0003,	0.0002,	0.0002,	0.0001,	0.0001,	0.0001,	0.0000,	0.0000,
//     0.0000,	0.0000,	0.0001,	0.0001,	0.0002,	0.0002,	0.0003,	0.0004,	0.0005,	0.0006,	0.0007,	0.0008,	0.0009,	0.0009,	0.0009,	0.0008,	0.0007,	0.0006,	0.0005,	0.0004,	0.0003,	0.0002,	0.0002,	0.0001,	0.0001,	0.0000,	0.0000,
//     0.0000,	0.0001,	0.0001,	0.0002,	0.0003,	0.0004,	0.0005,	0.0006,	0.0008,	0.0009,	0.0011,	0.0012,	0.0013,	0.0013,	0.0013,	0.0012,	0.0011,	0.0009,	0.0008,	0.0006,	0.0005,	0.0004,	0.0003,	0.0002,	0.0001,	0.0001,	0.0000,
//     0.0001,	0.0001,	0.0002,	0.0002,	0.0004,	0.0005,	0.0007,	0.0009,	0.0011,	0.0013,	0.0015,	0.0017,	0.0018,	0.0018,	0.0018,	0.0017,	0.0015,	0.0013,	0.0011,	0.0009,	0.0007,	0.0005,	0.0004,	0.0002,	0.0002,	0.0001,	0.0001,
//     0.0001,	0.0001,	0.0002,	0.0003,	0.0005,	0.0007,	0.0009,	0.0012,	0.0015,	0.0018,	0.0020,	0.0022,	0.0024,	0.0024,	0.0024,	0.0022,	0.0020,	0.0018,	0.0015,	0.0012,	0.0009,	0.0007,	0.0005,	0.0003,	0.0002,	0.0001,	0.0001,
//     0.0001,	0.0002,	0.0003,	0.0004,	0.0006,	0.0009,	0.0012,	0.0015,	0.0019,	0.0023,	0.0026,	0.0029,	0.0031,	0.0031,	0.0031,	0.0029,	0.0026,	0.0023,	0.0019,	0.0015,	0.0012,	0.0009,	0.0006,	0.0004,	0.0003,	0.0002,	0.0001,
//     0.0001,	0.0002,	0.0004,	0.0005,	0.0008,	0.0011,	0.0015,	0.0019,	0.0024,	0.0028,	0.0033,	0.0036,	0.0038,	0.0039,	0.0038,	0.0036,	0.0033,	0.0028,	0.0024,	0.0019,	0.0015,	0.0011,	0.0008,	0.0005,	0.0004,	0.0002,	0.0001,
//     0.0002,	0.0003,	0.0004,	0.0006,	0.0009,	0.0013,	0.0018,	0.0023,	0.0028,	0.0034,	0.0039,	0.0043,	0.0046,	0.0047,	0.0046,	0.0043,	0.0039,	0.0034,	0.0028,	0.0023,	0.0018,	0.0013,	0.0009,	0.0006,	0.0004,	0.0003,	0.0002,
//     0.0002,	0.0003,	0.0005,	0.0007,	0.0011,	0.0015,	0.0020,	0.0026,	0.0033,	0.0039,	0.0045,	0.0050,	0.0053,	0.0054,	0.0053,	0.0050,	0.0045,	0.0039,	0.0033,	0.0026,	0.0020,	0.0015,	0.0011,	0.0007,	0.0005,	0.0003,	0.0002,
//     0.0002,	0.0003,	0.0005,	0.0008,	0.0012,	0.0017,	0.0022,	0.0029,	0.0036,	0.0043,	0.0050,	0.0055,	0.0058,	0.0059,	0.0058,	0.0055,	0.0050,	0.0043,	0.0036,	0.0029,	0.0022,	0.0017,	0.0012,	0.0008,	0.0005,	0.0003,	0.0002,
//     0.0002,	0.0004,	0.0006,	0.0009,	0.0013,	0.0018,	0.0024,	0.0031,	0.0038,	0.0046,	0.0053,	0.0058,	0.0062,	0.0063,	0.0062,	0.0058,	0.0053,	0.0046,	0.0038,	0.0031,	0.0024,	0.0018,	0.0013,	0.0009,	0.0006,	0.0004,	0.0002,
//     0.0002,	0.0004,	0.0006,	0.0009,	0.0013,	0.0018,	0.0024,	0.0031,	0.0039,	0.0047,	0.0054,	0.0059,	0.0063,	0.0064,	0.0063,	0.0059,	0.0054,	0.0047,	0.0039,	0.0031,	0.0024,	0.0018,	0.0013,	0.0009,	0.0006,	0.0004,	0.0002,
//     0.0002,	0.0004,	0.0006,	0.0009,	0.0013,	0.0018,	0.0024,	0.0031,	0.0038,	0.0046,	0.0053,	0.0058,	0.0062,	0.0063,	0.0062,	0.0058,	0.0053,	0.0046,	0.0038,	0.0031,	0.0024,	0.0018,	0.0013,	0.0009,	0.0006,	0.0004,	0.0002,
//     0.0002,	0.0003,	0.0005,	0.0008,	0.0012,	0.0017,	0.0022,	0.0029,	0.0036,	0.0043,	0.0050,	0.0055,	0.0058,	0.0059,	0.0058,	0.0055,	0.0050,	0.0043,	0.0036,	0.0029,	0.0022,	0.0017,	0.0012,	0.0008,	0.0005,	0.0003,	0.0002,
//     0.0002,	0.0003,	0.0005,	0.0007,	0.0011,	0.0015,	0.0020,	0.0026,	0.0033,	0.0039,	0.0045,	0.0050,	0.0053,	0.0054,	0.0053,	0.0050,	0.0045,	0.0039,	0.0033,	0.0026,	0.0020,	0.0015,	0.0011,	0.0007,	0.0005,	0.0003,	0.0002,
//     0.0002,	0.0003,	0.0004,	0.0006,	0.0009,	0.0013,	0.0018,	0.0023,	0.0028,	0.0034,	0.0039,	0.0043,	0.0046,	0.0047,	0.0046,	0.0043,	0.0039,	0.0034,	0.0028,	0.0023,	0.0018,	0.0013,	0.0009,	0.0006,	0.0004,	0.0003,	0.0002,
//     0.0001,	0.0002,	0.0004,	0.0005,	0.0008,	0.0011,	0.0015,	0.0019,	0.0024,	0.0028,	0.0033,	0.0036,	0.0038,	0.0039,	0.0038,	0.0036,	0.0033,	0.0028,	0.0024,	0.0019,	0.0015,	0.0011,	0.0008,	0.0005,	0.0004,	0.0002,	0.0001,
//     0.0001,	0.0002,	0.0003,	0.0004,	0.0006,	0.0009,	0.0012,	0.0015,	0.0019,	0.0023,	0.0026,	0.0029,	0.0031,	0.0031,	0.0031,	0.0029,	0.0026,	0.0023,	0.0019,	0.0015,	0.0012,	0.0009,	0.0006,	0.0004,	0.0003,	0.0002,	0.0001,
//     0.0001,	0.0001,	0.0002,	0.0003,	0.0005,	0.0007,	0.0009,	0.0012,	0.0015,	0.0018,	0.0020,	0.0022,	0.0024,	0.0024,	0.0024,	0.0022,	0.0020,	0.0018,	0.0015,	0.0012,	0.0009,	0.0007,	0.0005,	0.0003,	0.0002,	0.0001,	0.0001,
//     0.0001,	0.0001,	0.0002,	0.0002,	0.0004,	0.0005,	0.0007,	0.0009,	0.0011,	0.0013,	0.0015,	0.0017,	0.0018,	0.0018,	0.0018,	0.0017,	0.0015,	0.0013,	0.0011,	0.0009,	0.0007,	0.0005,	0.0004,	0.0002,	0.0002,	0.0001,	0.0001,
//     0.0000,	0.0001,	0.0001,	0.0002,	0.0003,	0.0004,	0.0005,	0.0006,	0.0008,	0.0009,	0.0011,	0.0012,	0.0013,	0.0013,	0.0013,	0.0012,	0.0011,	0.0009,	0.0008,	0.0006,	0.0005,	0.0004,	0.0003,	0.0002,	0.0001,	0.0001,	0.0000,
//     0.0000,	0.0000,	0.0001,	0.0001,	0.0002,	0.0002,	0.0003,	0.0004,	0.0005,	0.0006,	0.0007,	0.0008,	0.0009,	0.0009,	0.0009,	0.0008,	0.0007,	0.0006,	0.0005,	0.0004,	0.0003,	0.0002,	0.0002,	0.0001,	0.0001,	0.0000,	0.0000,
//     0.0000,	0.0000,	0.0001,	0.0001,	0.0001,	0.0002,	0.0002,	0.0003,	0.0004,	0.0004,	0.0005,	0.0005,	0.0006,	0.0006,	0.0006,	0.0005,	0.0005,	0.0004,	0.0004,	0.0003,	0.0002,	0.0002,	0.0001,	0.0001,	0.0001,	0.0000,	0.0000,
//     0.0000,	0.0000,	0.0000,	0.0000,	0.0001,	0.0001,	0.0001,	0.0002,	0.0002,	0.0003,	0.0003,	0.0003,	0.0004,	0.0004,	0.0004,	0.0003,	0.0003,	0.0003,	0.0002,	0.0002,	0.0001,	0.0001,	0.0001,	0.0000,	0.0000,	0.0000,	0.0000,
//     0.0000,	0.0000,	0.0000,	0.0000,	0.0000,	0.0001,	0.0001,	0.0001,	0.0001,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0002,	0.0001,	0.0001,	0.0001,	0.0001,	0.0000,	0.0000,	0.0000,	0.0000,	0.0000
// );

void main() {
    vec4 sum = vec4(0);
    int count = 0;
    for (int i = -kernel_size / 2; i <= kernel_size / 2; i++) {
        for (int j = -kernel_size / 2; j <= kernel_size / 2; j++) {
            sum += kernel[count++] * texture(crack_texture, vec2(uv.x + float(j) / scale, uv.y + float(i) / scale));
        }
    }
    color = sum;
}